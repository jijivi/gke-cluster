name: NGINX Ingress controller

on:
  workflow_dispatch:

jobs:

  create-ingress:
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/.gcp.json
    runs-on: ubuntu-latest
    steps:
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GAR_JSON_KEY }}'

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v0.4.0'
      with:
        cluster_name: 'dev'
        location: 'us-west2-a'
    - name: deploy example app
      run: |
        # https://cloud.google.com/community/tutorials/nginx-ingress-gke
        kubectl create deployment hello-app --image=gcr.io/google-samples/hello-app:1.0
        kubectl expose deployment hello-app --port=8080 --target-port=8080
    - name: helm chart init
      run: |
        echo "1. Add the nginx-stable Helm repository"
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update

        echo "2. Deploy an NGINX controller Deployment and Service"
        helm install nginx-ingress ingress-nginx/ingress-nginx
        kubectl get deployment nginx-ingress-ingress-nginx-controller
        kubectl get service nginx-ingress-ingress-nginx-controller

        echo "3. Verify that the nginx-ingress-controller Deployment and Service are deployed"
        kubectl get deployment nginx-ingress-ingress-nginx-controller
        kubectl get service nginx-ingress-ingress-nginx-controller

        echo "4. Wait a few moments while the Google Cloud L4 load balancer gets deployed, and then confirm that the nginx-ingress-nginx-ingress Service has been deployed and that you have an external IP address associated with the service:"
        kubectl get service nginx-ingress-ingress-nginx-controller

        echo "5. Export the EXTERNAL-IP of the NGINX ingress controller in a variable"
        export NGINX_INGRESS_IP=$(kubectl get service nginx-ingress-ingress-nginx-controller -ojson | jq -r '.status.loadBalancer.ingress[].ip')

        echo "6. Create a simple Ingress Resource YAML file that uses the NGINX Ingress Controller and has one path rule defined:"
        cat <<EOF > ingress-resource.yaml
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: ingress-resource
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/ssl-redirect: "false"
        spec:
          rules:
          - host: "`echo -n ${NGINX_INGRESS_IP}`.nip.io"
            http:
              paths:
              - pathType: Prefix
                path: "/hello"
                backend:
                  service:
                    name: hello-app
                    port:
                      number: 8080
        EOF
        kubectl apply -f ingress-resource.yaml
        kubectl get ingress ingress-resource
        curl http://$NGINX_INGRESS_IP.nip.io/hello
